		
//=============================================IPVS 
//=============================================IPVS 
//=============================================IPVS 
//=============================================IPVS 
	//从2.4.24以后IPVS已经成为linux官方标准内核的一部分
	ipvs称之为"IP虚拟服务器"（IP Virtual Server，简写为IPVS）
		"IPVS"基本上是一种高效的"Layer-4交换机"，
		它提供负载平衡的功能
		//========================根据IP和TCP报文头分发
		不管请求被送到哪一台服务器，返回结果都应该是一样的。
		1). 当"TCP连接"的"初始SYN报文"到达时
			IPVS就选择"一台服务器"将报文"转发"给它，
			//随机选择？？
		2). 此后通过查"'发报文的IP'和'TCP报文头地址'"
			保证"此连接的后继报文"被"转发到相同的服务器"
		//========================基于内容请求分发
		有一些应用中后端的服务器可能功能不一
			1).有的是提供HTML文档的Web服务器
			2).有的是提供图片的Web服务器，
			3).有的是提供CGI的Web服务器。	
		这时，就需要"基于内容"
		请求分发 (Content-Based Request Distribution)，
		同时"基于内容"请求分发"可以提高后端服务器"上访问的局部性。
//=====================================================LVS 
//=====================================================LVS 
//=====================================================LVS 
	//该项目在1998年5月由章文嵩博士组织成立
	LVS是linux virtual server的简写，"linux虚拟服务器"
	1). "虚拟服务器"建立在一个"集群的服务器"中。
		"真正的服务器"和"负载平衡器"之间
		通过"高速局域网"或"地理上分散的广域网"可以相互连接。
	2). "负载平衡器"可以将请求"调度到不同的服务器"，
		并将"并行的集群服务"
		显示的"像在一个单一的IP地址"上的"一个虚拟的服务"
	//======另外
	"请求调度"可以使用"IP负载平衡技术"或"应用级负载平衡技术"。
	"系统的可扩展性"是通过透明地"添加或删除集群中的节点"来实现的。
	通过"检测节点或守护进程的失败"和"适当地重新配置系统"提供高可用性。
	
		
//=====================================================	IPVS与LVS
//=====================================================	IPVS与LVS
//=====================================================	IPVS与LVS

	"IPVS"是"LVS"的关键
		因为"LVS的IP负载平衡技术"就是通过"IPVS模块"来实现的
		//IPVS是LVS集群系统的核心软件
		//============================在机器上的位置
		IPVS安装在Director Server上，
		同时在Director Server上虚拟出一个IP地址，
		用户必须通过"这个虚拟的IP地址"访问服务
		这个虚拟IP一般称为LVS的VIP，即Virtual IP。
		//=====================
		访问的请求首先经过VIP到达负载调度器，
		然后由负载调度器从Real Server列表中选取一个服务节点响应用户的请求。
		//====================================="数据流向"示意
			"用户"发送请求
				--->"VIP(虚IP)"
					--->"LVS负载均衡服务器"
						--->"apahce服务器"
							--->"mysql服务器"&"memcache服务器"&"共享存储服务器"
		/*****************
		负载均衡器"接受客户的请求"，
		===>先是根据"LVS的调度算法（8种）"来决定
				将"这个请求"发送给"哪个节点服务器"
		===>然后依据"自己的工作模式（3种）"来看应该
				如何"把请求发送给节点服务器"
				"节点服务器"又应该如何来把"响应数据包"发回给客户端
		*****************/
//===================================================== ipvsadm
//===================================================== ipvsadm
//===================================================== ipvsadm
	ipvs是工作在内核层，我们不能够直接操作ipvs，
	需要使用ipvs的管理工具ipvsadm进行管理
	//另外，通过keepalived也可以管理
	
 






	
			