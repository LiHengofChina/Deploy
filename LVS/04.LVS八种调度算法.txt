//=====================
"Lvs的调度算法"决定了如何在"集群节点"之间分布工作负荷
当"director调度器"收到"来自客户端访问VIP"的上的集群服务的入站请求时
"director调度器"必须决定"哪个集群节点"应该处理请求。
//=====================
固定调度算法   rr  wrr  dh  sh 
动态调度算法   wlc lc lblc lblcr 
//=====================
1. 轮叫调度 rr
这种算法是最简单的，就是按依次循环的方式将请求调度到不同的服务器上，
该算法最大的特点就是简单。轮询算法假设所有的服务器处理请求的能力都是一样的，
调度器会将所有的请求平均分配给每个真实服务器，不管后端 RS 配置和处理能力，非常均衡地分发下去。

2. 加权轮叫 wrr
这种算法比 rr 的算法多了一个权重的概念，可以给 RS 设置权重，权重越高，
那么分发的请求数越多，权重的取值范围 0 – 100。主要是对rr算法的一种优化和补充，
 LVS 会考虑每台服务器的性能，并给每台服务器添加要给权值，如果服务器A的权值为1，服务器B的权值为2，则调度到服务器B的请求会是服务器A的2倍。权值越高的服务器，处理的请求越多。

3. 最少链接 lc
这个算法会根据后端 RS 的连接数来决定把请求分发给谁，比如 RS1 连接数比 RS2 连接数少，
那么请求就优先发给 RS1 

4. 加权最少链接 wlc
这个算法比 lc 多了一个权重的概念。

5. 基于局部性的最少连接调度算法 lblc
这个算法是请求数据包的目标 IP 地址的一种调度算法，
该算法先根据请求的目标 IP 地址寻找最近的该目标 IP 地址所有使用的服务器，
如果这台服务器依然可用，并且有能力处理该请求，调度器会尽量选择相同的服务器，
否则会继续选择其它可行的服务器

6. 复杂的基于局部性最少的连接算法 lblcr
记录的不是要给目标 IP 与一台服务器之间的连接记录，
它会维护一个目标 IP 到一组服务器之间的映射关系，防止单点服务器负载过高。

7. 目标地址散列调度算法 dh
该算法是根据目标 IP 地址通过散列函数将目标 IP 与服务器建立映射关系，
出现服务器不可用或负载过高的情况下，发往该目标 IP 的请求会固定发给该服务器。

8. 源地址散列调度算法 sh
与目标地址散列调度算法类似，但它是根据源地址散列算法进行静态分配固定的服务器资源。
	
	
