Gradle学习系列之二――创建Task的多种方法
//----------------------------------
	　Gradle的Project从本质上说只是含有多个Task的容器，
	  一个Task与Ant的Target相似
	  //--------------------------
	<< 
	doLast
	doFirst	  
//--------------------------------
（1）调用Project的task()方法创建Task
	task关键字实际上是一个方法调用，该方法属于Project。	
	//-------------
	Project中存在多个重载的task()方法。
	//--------------------
　  我们自定义的多个Task都位于TaskContainer中，	
	//--------------------
	Project中的tasks属性即表示该TaskContainer。	

	//--------------------
	DefaultTaskContainer_Decorated表示tasks类型	
	  
（2）通过TaskContainer的create()方法创建Task	  
	  
（3） 声明Task之间的依赖关系	  
	 　Task之间是可以存在依赖关系，
	   比如TaskA依赖TaskB，
	   那么在执行TaskA时，
	   Gradle会先执行TaskB，
	   再执行TaskA。 
（4）配置Task	  
　　一个Task除了执行操作之外，还可以包含多个Property，
	//-----
	默认定义的Property有:
	description，
	logger等
	//-----
	特定的Task类型还可以含有特定的Property
	比如Copy的from和to
	//-----
	还可以动态地向Task中加入额外的Property。
	//-----
	执行一个Task之前，我们通常都需要先设定Property的值，	
	 多种方法设置Task的Property值。
		1).定义Task的时候对Property进行配置：
		2).通过闭包的方式来配置
			//----
			Gradle在执行Task时分为两个阶段，
			首先是配置阶段，
			然后才是实际执行阶段。
			//------
			以在执行task之前，
			Gradle会扫描整个build.gradle文档，
		3).通过调用Task的configure()方法完成Property的设置
	  
	  
	  
	  
	  
	  
	  
	  
	  
	  
	  
	  
	  
	  
	  
	  
	  
	  
	  
	  
	  
