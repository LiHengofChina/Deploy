
//================================================ 插件
//================================================ 插件

	插件（Plugins）是用来拓展 Webpack 功能的，
	它们会在整个构建过程中生效，执行相关的任务。
		
		//Webpack有很多内置插件，同时也有很多第三方插件

//================================================ Loaders 和 Plugins 的区别	
//================================================ Loaders 和 Plugins 的区别	
	不要混淆 插件 和 Loaders

	1). Loaders是在打包构建过程中用来处理源文件的（JSX，Scss，Less..），一次处理一个。
		
	2).	插件并不直接操作单个文件，它直接对整个构建过程起作用。
	
		
 
//================================================ 常见插件（一）
//================================================ 常见插件（一）

1). HtmlWebpackPlugin
	//依据一个简单的index.html模板
	//生成一个"自动引用你打包后JS文件"的新index.html
	//这在每次生成的js文件名称不同时非常有用（比如添加了hash值）。
2). 插件安装
	npm install --save-dev html-webpack-plugin

3). 产生插件实例
	const HtmlWebpackPlugin = require('html-webpack-plugin');
	
	plugins: [
            new HtmlWebpackPlugin({
                template: __dirname + "/app/index.tmpl.html"//new 一个这个插件的实例，并传入相关的参数
            })
	]							
 
//================================================ 常见插件（二）
//================================================ 常见插件（二）

Hot Module Replacement
	它允许你在修改组件代码后，自动刷新实时预览修改后的效果。
	//一句话，时时部署,看到最新修改
	1).
		devServer: {
			......
			hot: true 
			......
		},
	2).
		const webpack = require('webpack');
		plugins: [
			new webpack.HotModuleReplacementPlugin()//热加载插件
		]

	3).
		npm install --save-dev babel-plugin-react-transform
		npm install --save-dev react-transform-hmr






				
