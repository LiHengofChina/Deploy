//=================================murano由来
//=================================murano由来
	OpenStack在H版本到K版本的"摸索"中，
	对"整合容器"的思路"逐步清晰与成熟"，
	
	温哥华 OpenStack Summit 上，
	Container/Docker成为一大关注焦点
	
	《Exploring Opportunities:Containers and OpenStack》
	阐明了"OpenStack"今后"深度整合容器"的"方式与方向"。
	
	基于这份白皮书， Liberty 版本发布时，
	包含了许多容器相关的重要新特性：
	//=================================特性如下：PS:murano只是其中的一个
	1). 
		Magnum-提供容器环境的编排、部署与管理，
		即：COE(Container Orchestration Engines) as a service，
	    目前支持Kubernetes、Mesos和Docker Swarm；
	2).
		Kuryr-集成libnetwork等原生的容器网络组件，
		打通容器网络与Neutron网络；
	3). 
		Murano-提供"应用目录服务"，
		实现"服务与应用程序的一键发布"、
		"快速部署和生命周期管理"；
	4).
		Solum-简化云应用程序从"研发到交付"的"生命周期管理"，
		为云应用开发者提供持续集成的能力；
	5).
		Manila-文件共享服务，
		可以为容器应用的Replication和
		多读多写提供持久化存储方案。
	
//================================= murano 的由来
//================================= murano 的由来
	容器的出现解决了"服务与应用"的
	"快速部署与弹性扩展"的问题
	使得这些年不温不火的"PaaS平台"重新得到了关注。
	//===============================PaaS是一个平台
	//===============================PaaS是一个平台
	如何将"第三方开发者的服务"与"应用"方便地发布出来
	是PaaS平台的一个重要功能点
	/**
		即PaaS平台的应用目录(Application Catalog)服务。
		各主流的PaaS平台，
		比如OpenShift、CloudFundry、GAE都有相应的方案，
		
		但"发布接口"与"应用打包方式"并不统一。
		
		OpenStack的 Murano 致力于通过 "标准化"
		以及一套"新的编程语言（YAQL）"来解决这一问题。
	*/
	//=============================== Murano
	//=============================== Murano
	Murano是 OpenStack 的应用目录服务，
	在"Murano的世界"里，
	一切皆服务(Anything as a Service)，
	不管是
	"虚拟机镜像"、
	"容器镜像"、
	"服务应用模板"，
	甚至是"一个编排模板(HOT)"
	都可以在Murano中发布。
	
	//第三方开发者与管理员可以通过
	//标准的接口
	//标准的应用打包规范
	//标准的应用发布流程
	//标准的生命周期管理流程
	//来实现服务与应用程序的一键发布
	//快速部署和管理
	//降低服务与应用程序对底层基础架构的依赖。	
	
	简单说，Murano主要提供应用目录的服务，
	就是用户可以把一些常用的应用发布出来供其他用户去使用。
	
	//在Liberty版本中，
	//开发者的控制得到加强，
	//1).支持应用版本升级。
	//2).应用程序的使用者可以自由选择应用将要被部署的网络。
	//3).另外，在基础设施控制方面，
	//Murano能够使用Glance Artifact Repository作为它的存储后端，
	//通过Glance Artifact API即可读取或存储服务镜像。	
	
	一句话就是:
		murano 为了解决PaaS问题
		推出一个AaaS概念。
	
	
